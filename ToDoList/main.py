import tkinter as tk
import sqlite3 as sq;
from tkinter import PhotoImage, messagebox
import base64

def add_task(task):
    if task != "":
        tasks.append(task)
        cur.execute("INSERT INTO tasks (title) VALUES (?)", (task,))
        update()
        entry.delete(0, 'end')
    else:
        messagebox.showinfo(master=None,message="Please Enter Task Name",title="Seriously!")

def del_task():
    task = listbox.get("active")
    if task in tasks:
        confirmation = messagebox.askyesno(title="Delete?",message=f"Are you sure you want to delete this task: {task}?")
        if confirmation:
            tasks.remove(task)
            cur.execute("DELETE FROM tasks WHERE title=?", (task,))
    else:
        messagebox.showinfo(master=None,message="You Are Not Selecting Anything!",title="Deleting Air?")
    update()

def delete_all():
    confirmation = messagebox.askyesno(title="Delete All?",message="Are you sure you want to delete all task?")
    if confirmation:
        tasks.clear()
        cur.execute("DELETE FROM tasks")
    update()

def sort_list():
    tasks.sort()
    update()

def update():
    listbox.delete(0,"end")
    for task in tasks:
        listbox.insert("end",task)

def show_list():
    for task in tasks:
        listbox.insert("end",task)

def retrieve_data():
    tasks.clear()
    for row in cur.execute("SELECT title FROM tasks"):
        tasks.append(row[0])


if __name__ == "__main__":
    icon = """"""
    icondata = base64.b64decode(icon)
    root = tk.Tk()
    root.title("To-Do List")
    root.wm_iconphoto(True,PhotoImage(data=icondata))
    root.resizable(False,False)
    root.geometry("300x500")
    root.configure(bg="black")

    # Connect to Database
    conn = sq.connect("ToDoList/ToDo.db")
    cur = conn.cursor()

    cur.execute('create table if not exists tasks (title text)')

    tasks = []

    Title = tk.Label(root,text="To-Do List",font=("System",30),fg="white",bg="black")
    entry = tk.Entry(root,font=("System",15))
    listbox = tk.Listbox(root,bd=1,width=32,height=16,font=("System",10))
    add_button = tk.Button(root,text="Add",bd=1,width=5,command=lambda:add_task(entry.get()))
    del_button = tk.Button(root,text="Delete",bd=1,width=5,command=del_task)
    delAll_button = tk.Button(root,text="Delete All",width=25,bd=1,command=delete_all)
    sort_button = tk.Button(root,text="Sort List",width=25,bd=1,command=sort_list)

    Title.place(x=50,y=10)
    entry.place(x=10,y=70)
    add_button.place(x=200,y=70)
    del_button.place(x=250,y=70)
    delAll_button.place(x=60,y=110)
    sort_button.place(x=60,y=145)
    listbox.place(x=20,y=200)

    #Centralize Window
    root.update()
    window_width = root.winfo_width()
    window_height = root.winfo_height()
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x = int((screen_width/2) - (window_width/2))
    y = int((screen_height/2) - (window_height/2))
    root.geometry(f"{window_width}x{window_height}+{x}+{y}")
    
    retrieve_data()
    show_list()
    root.mainloop()

    conn.commit()
    cur.close()